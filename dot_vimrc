" Default setting in Vim 8.0 and NeoVim
set nocompatible
filetype plugin indent on

" Turn on syntax highlighting
syntax on

" Disable the default Vim startup message.
set shortmess+=I
" Consider Tim Pope's commentary.vim, use `gc` to comment codes

" Show line absolute/relative line numbers 
set number
set relativenumber

" Make backspace behave more reasonably.
set backspace=indent,eol,start

" Hidden buffers to disable buffer protection.
set hidden

" Enable searching as you type
set incsearch
" Making search lowercase case-insensitive and UPPCASE case-sensitive
set ignorecase
set smartcase

" Disable audible bell because it's annoying.
set noerrorbells visualbell t_vb=

" Default tabstop, softtabstop and shiftwitdth
set tabstop=4 softtabstop=4 shiftwidth=4 expandtab

" Disable arrow keys in normal mode (TODO no working in nvim)
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" ...and in insert mode (TODO no working in nvim)
inoremap <Left>  <ESC>:echoe "Use h"<CR>
inoremap <Right> <ESC>:echoe "Use l"<CR>
inoremap <Up>    <ESC>:echoe "Use k"<CR>
inoremap <Down>  <ESC>:echoe "Use j"<CR>

" Set filetype-specific settings 
" Look at `ftplugin` to make settings modular
autocmd FileType cpp setlocal ts=4 sts=4 sw=4 et
autocmd FileType c setlocal ts=2 sts=2 sw=2 et

" Set tabstop, softtabstop and shiftwidth to the same value
command! -nargs=* Stab call Stab()
function! Stab()
  let l:tabstop = 1 * input('set tabstop = softtabstop = shiftwidth = ')
  if l:tabstop > 0
    let &l:sts = l:tabstop
    let &l:ts = l:tabstop
    let &l:sw = l:tabstop
  endif
  call SummarizeTabs()
endfunction

function! SummarizeTabs()
  try
    echohl ModeMsg
    echon 'tabstop='.&l:ts
    echon ' shiftwidth='.&l:sw
    echon ' softtabstop='.&l:sts
    if &l:et
      echon ' expandtab'
    else
      echon ' noexpandtab'
    endif
  finally
    echohl None
  endtry
endfunction

